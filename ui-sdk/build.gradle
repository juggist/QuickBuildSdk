apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    /**支持dataBinding**/
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'androidx.core:core-ktx:1.3.1'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.google.android.material:material:1.2.1'
    api 'androidx.vectordrawable:vectordrawable:1.1.0'
    api 'androidx.navigation:navigation-fragment:2.3.0'
    api 'androidx.navigation:navigation-ui:2.3.0'
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    api 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    api 'androidx.navigation:navigation-ui-ktx:2.3.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'

    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

//    api 'com.juggist:sdk:1.0.0'
    api project(':sdk')
}


/**
 * 上传到repo
 * start
 */
ext {
    // 从Github上clone下来的项目的本地地址
    GITHUB_REPO_PATH = "/Users/lufeisong/Documents/juggistAndroidSdk/sdk"
    PUBLISH_GROUP_ID = 'com.juggist'
    PUBLISH_ARTIFACT_ID = 'ui-sdk'
    PUBLISH_VERSION = '1.0.0'
}

uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(project.GITHUB_REPO_PATH)
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
        }
    }
}

// 源代码一起打包(不需要打包源代码的不要添加这几行)
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
}
/**
 * 上传到repo
 * end
 */

/**
 * 如果打包aar，则远程依赖sdk，否则本地依赖sdk
 * start
 */
gradle.taskGraph.beforeTask {
//    Task task ->
//        println "Project[${task.project.name}]--->Task[${task.name}] 在执行之前被回调"
//        if(task.name == 'uploadArchives'){
//            android.libraryVariants.all { variant ->
//                dependencies.add("api",'com.juggist:sdk:1.0.1')
//            }
//        }else{
//            android.libraryVariants.all { variant ->
//                dependencies.add("api",project(':sdk'))
//            }
//
//        }

}
afterEvaluate {
//    println("==========afterEvaluate========:${android.libraryVariants}")
    android.libraryVariants.all { variant ->
        println("==========afterEvaluate========variant:${variant.name}")
//        variant.assemble.doLast {
//            println("==========afterEvaluate========task name:${variant.buildType.name}")
//            if (variant.buildType.name == ('uploadArchives')) {
//                dependencies.add("api",'com.juggist:sdk:1.0.1')
//            }else{
//                dependencies.add("api",project(':sdk'))
//            }
//        }
    }
}
/**
 * 如果打包aar，则远程依赖sdk，否则本地依赖sdk
 * end
 */